import sqlite3

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏
DB_PATH = "db/OSBBDAH.sqlite"

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
conn = sqlite3.connect(DB_PATH)
cursor = conn.cursor()

# –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é —Ç–∏–º—á–∞—Å–æ–≤–∏—Ö –∫–ª–∞—Å—Ç–µ—Ä—ñ–≤ —Å–º–∏—Å–ª–æ–≤–∏—Ö —Ç–µ–º (—è–∫—â–æ —â–µ –Ω–µ–º–∞—î)
cursor.execute("""
CREATE TABLE IF NOT EXISTS semantic_thread_groups (
    group_id INTEGER PRIMARY KEY AUTOINCREMENT,
    topic_id INTEGER,
    created_at TEXT DEFAULT CURRENT_TIMESTAMP
)
""")

cursor.execute("""
CREATE TABLE IF NOT EXISTS message_to_group (
    message_id INTEGER PRIMARY KEY,
    group_id INTEGER,
    FOREIGN KEY(message_id) REFERENCES messages(message_id),
    FOREIGN KEY(group_id) REFERENCES semantic_thread_groups(group_id)
)
""")

conn.commit()

# –û–±—Ä–æ–±–∏—Ç–∏ –≤—Å—ñ topic_id –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏
cursor.execute("SELECT DISTINCT topic_id FROM messages WHERE topic_id IS NOT NULL")
topic_ids = [row[0] for row in cursor.fetchall()]

group_count = 0

for topic_id in topic_ids:
    print(f"üîé –û–±—Ä–æ–±–∫–∞ topic_id = {topic_id}")

    # –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ —Ç–µ–º—ñ, –≤–ø–æ—Ä—è–¥–∫–æ–≤–∞–Ω—ñ –∑–∞ —á–∞—Å–æ–º
    cursor.execute("""
        SELECT message_id, sender_id, date
        FROM messages
        WHERE topic_id = ?
        ORDER BY date ASC
    """, (topic_id,))
    messages = cursor.fetchall()

    if not messages:
        continue

    # –ö–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü—ñ—è: –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±–µ–∑ reply ‚Äî –Ω–æ–≤–∞ —Ç–µ–º–∞
    current_group_id = None
    for i, (message_id, sender_id, date) in enumerate(messages):
        # —è–∫—â–æ —Ü–µ –ø–µ—Ä—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚Äî –Ω–æ–≤–∏–π –∫–ª–∞—Å—Ç–µ—Ä
        if i == 0:
            cursor.execute("INSERT INTO semantic_thread_groups (topic_id) VALUES (?)", (topic_id,))
            current_group_id = cursor.lastrowid
            cursor.execute("INSERT INTO message_to_group (message_id, group_id) VALUES (?, ?)", (message_id, current_group_id))
            continue

        # –û—Ç—Ä–∏–º–∞—Ç–∏ —á–∏ —Ü–µ reply (–º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≤ –±–∞–∑—É –∞–±–æ –ª–æ–≥—ñ–∫—É –æ–∫—Ä–µ–º–æ)
        cursor.execute("SELECT reply_to_msg_id FROM messages WHERE message_id = ?", (message_id,))
        reply = cursor.fetchone()
        reply_to_id = reply[0] if reply else None

        if reply_to_id:
            # —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–∞–π—Ç–∏ —ñ—Å–Ω—É—é—á—É –≥—Ä—É–ø—É –¥–ª—è reply_to_id
            cursor.execute("SELECT group_id FROM message_to_group WHERE message_id = ?", (reply_to_id,))
            reply_group = cursor.fetchone()
            if reply_group:
                current_group_id = reply_group[0]
            else:
                cursor.execute("INSERT INTO semantic_thread_groups (topic_id) VALUES (?)", (topic_id,))
                current_group_id = cursor.lastrowid
        else:
            # –Ω–æ–≤–∞ –≥—ñ–ª–∫–∞ ‚Äî –Ω–æ–≤–∏–π group_id
            cursor.execute("INSERT INTO semantic_thread_groups (topic_id) VALUES (?)", (topic_id,))
            current_group_id = cursor.lastrowid

        cursor.execute("INSERT INTO message_to_group (message_id, group_id) VALUES (?, ?)", (message_id, current_group_id))

    conn.commit()
    group_count += 1

print(f"‚úÖ –û–±—Ä–æ–±–ª–µ–Ω–æ {group_count} topics —ñ —Å—Ç–≤–æ—Ä–µ–Ω–æ semantic thread groups.")
conn.close()
